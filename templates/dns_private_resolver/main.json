{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "5043073528647301846"
    }
  },
  "variables": {
    "name": "poc-we-dnsrsv-s-",
    "location": "[resourceGroup().location]",
    "zones": [
      "privatelink.azurewebsites.net",
      "privatelink.blob.core.windows.net",
      "privatelink.database.windows.net",
      "privatelink.mysql.database.azure.com",
      "privatelink.postgres.database.azure.com"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('{0}dnspr', variables('name')), 'Azure')]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "subnet": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}vnet', variables('name')), 'DnsPrivateResolverInbound')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers', format('{0}dnspr', variables('name')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsResolvers/outboundEndpoints",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('{0}dnspr', variables('name')), 'Local')]",
      "location": "[variables('location')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}vnet', variables('name')), 'DnsPrivateResolverOutbound')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers', format('{0}dnspr', variables('name')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsForwardingRulesets/forwardingRules",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('{0}dnsfr', variables('name')), 'plainconcepts')]",
      "properties": {
        "domainName": "plainconcepts.com.",
        "forwardingRuleState": "Enabled",
        "targetDnsServers": [
          {
            "ipAddress": "10.0.0.4",
            "port": 53
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsForwardingRulesets', format('{0}dnsfr', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsForwardingRulesets/virtualNetworkLinks",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('{0}dnsfr', variables('name')), format('{0}vnet-link', variables('name')))]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsForwardingRulesets', format('{0}dnsfr', variables('name')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}vnet', variables('name'))]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.4.0/26"
          ]
        },
        "subnets": [
          {
            "name": "DnsPrivateResolverInbound",
            "properties": {
              "addressPrefix": "10.0.4.0/27",
              "delegations": [
                {
                  "name": "Microsoft.Network/dnsResolvers",
                  "properties": {
                    "serviceName": "Microsoft.Network/dnsResolvers"
                  }
                }
              ]
            }
          },
          {
            "name": "DnsPrivateResolverOutbound",
            "properties": {
              "addressPrefix": "10.0.4.32/27",
              "delegations": [
                {
                  "name": "Microsoft.Network/dnsResolvers",
                  "properties": {
                    "serviceName": "Microsoft.Network/dnsResolvers"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}rt', variables('name'))]",
      "location": "[variables('location')]",
      "properties": {
        "disableBgpRoutePropagation": true
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}nsg', variables('name'))]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "DomainNameSystem",
            "properties": {
              "priority": 100,
              "direction": "Inbound",
              "protocol": "TCP",
              "access": "Allow",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[reference(resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', format('{0}dnspr', variables('name')), 'Azure'), '2022-07-01').ipConfigurations[0].privateIpAddress]",
              "destinationPortRange": "53"
            }
          },
          {
            "name": "DenyAll",
            "properties": {
              "priority": 4096,
              "direction": "Inbound",
              "protocol": "*",
              "access": "Deny",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', format('{0}dnspr', variables('name')), 'Azure')]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsResolvers",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}dnspr', variables('name'))]",
      "location": "[variables('location')]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsForwardingRulesets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}dnsfr', variables('name'))]",
      "location": "[variables('location')]",
      "properties": {
        "dnsResolverOutboundEndpoints": [
          {
            "id": "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', format('{0}dnspr', variables('name')), 'Local')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', format('{0}dnspr', variables('name')), 'Local')]"
      ]
    },
    {
      "copy": {
        "name": "dns_zones",
        "count": "[length(variables('zones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('zones')[copyIndex()]]",
      "location": "global"
    },
    {
      "copy": {
        "name": "azurewebsites_net_link",
        "count": "[length(variables('zones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('zones')[copyIndex()], format('{0}vnet-link', variables('name')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('zones')[copyIndex()])]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('name')))]"
      ]
    }
  ]
}